[General]
#scheduler-class = "cRealTimeScheduler" #so that speed appears realistic
#debug-on-errors = true
tkenv-plugin-path = ../../../etc/plugins
sim-time-limit = 200s
seed-set=0

*.numHosts = 1
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 400m
**.constraintAreaMaxZ = 0m
**.host*.tester.updateInterval = ${0s, 0.1s, 1s, 10s, 100s}
**.host*.tester.testInterval = 200s
**.updateInterval = 0 # test with 0s too, and let getCurrentPosition update the display string from a test module

**.mobility.initFromDisplayString = false

[Config ANSimMobility]
network = MobileNetwork
**.host*.mobilityType = "ANSimMobility"
**.host*.mobility.ansimTrace = xmldoc("ansimtrace.xml")
**.host*.mobility.nodeId = -1  #means "host module's index"

[Config BonnMotionMobility]
network = MobileNetwork
**.host*.mobilityType = "BonnMotionMobility"
**.host*.mobility.traceFile = "bonnmotion_small.movements"
**.host*.mobility.nodeId = -1  #means "host module's index"

[Config ChiangMobility]
network = MobileNetwork
**.host*.mobilityType = "ChiangMobility"
**.host*.mobility.stateTransitionUpdateInterval = 3s
**.host*.mobility.speed = 10mps

[Config CircleMobility]
network = MobileNetwork
**.host*.mobilityType = "CircleMobility"
**.host*.mobility.cx = 200m
**.host*.mobility.cy = 200m
**.host*.mobility.r = 150m
**.host*.mobility.speed = 40mps

[Config ConstSpeedMobility]
network = MobileNetwork
**.host*.mobilityType = "ConstSpeedMobility"
**.host*.mobility.speed = 50mps

[Config GaussMarkovMobility]
network = MobileNetwork
**.host*.mobilityType = "GaussMarkovMobility"
**.host*.mobility.alpha = 0.9
**.host*.mobility.speed = 10mps
**.host*.mobility.angle = 0deg
**.host*.mobility.variance = 40
**.host*.mobility.margin = 30m

[Config LinearMobility]
network = MobileNetwork
**.host*.mobilityType = "LinearMobility"
**.host*.mobility.speed = 50mps
**.host*.mobility.angle = 30deg  # degrees

[Config LinearMobility_accdown]
extends = LinearMobility
**.host*.mobility.acceleration = -1.0  # m/s2

[Config LinearMobility_accup]
extends = LinearMobility
**.host*.mobility.speed = 0mps
**.host*.mobility.acceleration = 1.0  # m/s2

[Config MassMobility]
network = MobileNetwork
**.host*.mobilityType = "MassMobility"
**.host*.mobility.changeInterval = truncnormal(2s, 0.5s)
**.host*.mobility.changeAngleBy = normal(0deg, 30deg)
**.host*.mobility.speed = truncnormal(15mps, 5mps)

[Config MassMobilityWithScenario]
network = MobileNetworkWithScenario
**.host*.mobilityType = "MassMobility"
**.host*.mobility.changeInterval = truncnormal(2s, 0.5s)
**.host*.mobility.changeAngleBy = normal(0deg, 30deg)
**.host*.mobility.speed = truncnormal(15mps, 5mps)
**.scenarioManager.script = xmldoc("scenario.xml")

[Config RandomWPMobility]
network = MobileNetwork
**.host*.mobilityType = "RandomWPMobility"
**.host*.mobility.speed = uniform(20mps,50mps)
**.host*.mobility.waitTime = uniform(3s,8s)

[Config RectangleMobility]
network = MobileNetwork
**.host*.mobilityType = "RectangleMobility"
**.host*.mobility.constraintAreaMinX = 100m
**.host*.mobility.constraintAreaMinY = 100m
**.host*.mobility.constraintAreaMaxX = 500m
**.host*.mobility.constraintAreaMaxY = 300m
**.host*.mobility.startPos = 0
**.host*.mobility.speed = 20mps

[Config TractorMobility]
network = MobileNetwork
**.host*.mobilityType = "TractorMobility"
**.host*.mobility.x1 = 100m
**.host*.mobility.y1 = 100m
**.host*.mobility.x2 = 500m
**.host*.mobility.y2 = 300m
**.host*.mobility.rowCount = 8
**.host*.mobility.speed = 50mps

[Config TurtleMobility1]
network = MobileNetwork
**.host*.mobilityType = "TurtleMobility"
**.host*.mobility.turtleScript = xmldoc("turtle.xml", "movements//movement[@id='1']")

[Config TurtleMobility2]
network = MobileNetwork
**.host*.mobilityType = "TurtleMobility"
**.host*.mobility.turtleScript = xmldoc("turtle.xml", "movements//movement[@id='2']")

[Config TurtleMobility3]
network = MobileNetwork
**.host*.mobilityType = "TurtleMobility"
**.host*.mobility.turtleScript = xmldoc("turtle.xml", "movements//movement[@id='3']")

[Config TurtleMobility4]
network = MobileNetwork
**.host*.mobilityType = "TurtleMobility"
**.host*.mobility.turtleScript = xmldoc("turtle.xml", "movements//movement[@id='4']")

[Config TurtleMobility5]
network = MobileNetwork
**.host*.mobilityType = "TurtleMobility"
**.host*.mobility.turtleScript = xmldoc("turtle.xml", "movements//movement[@id='5']")

[Config TurtleMobility6]
network = MobileNetwork
**.host*.mobilityType = "TurtleMobility"
**.host*.mobility.turtleScript = xmldoc("turtle.xml", "movements//movement[@id='6']")